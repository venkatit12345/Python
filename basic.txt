Python tutorial provides basic and advanced concepts of Python
powerful, high level and object-oriented programming language.
Python is an interpreted scripting language also. Guido Van Rossum is known as the founder of python programming.
Python Programming such as installation, control statements, Strings, Lists, Tuples, Dictionary, Modules, Exceptions, Date and Time, File I/O, Programs, etc.
Python 2 uses print as a statement and used as print "something" to print some string on the console. On the other hand, Python 3 uses print as a function and used as print("something") to print something on the console.
lots of features that are listed below.

1) Easy to Learn and Use
Python is easy to learn and use. It is developer-friendly and high level programming language.

2) Expressive Language
Python language is more expressive means that it is more understandable and readable.

3) Interpreted Language
Python is an interpreted language i.e. interpreter executes the code line by line at a time. This makes debugging easy and thus suitable for beginners.

4) Cross-platform Language
Python can run equally on different platforms such as Windows, Linux, Unix and Macintosh etc. So, we can say that Python is a portable language.

5) Free and Open Source
Python language is freely available at offical web address.The source-code is also available. Therefore it is open source.

6) Object-Oriented Language
Python supports object oriented language and concepts of classes and objects come into existence.

7) Extensible
It implies that other languages such as C/C++ can be used to compile the code and thus it can be used further in our python code.

8) Large Standard Library
Python has a large and broad library and prvides rich set of module and functions for rapid application development.

9) GUI Programming Support
Graphical user interfaces can be developed using Python.

10) Integrated
It can be easily integrated with languages like C, C++, JAVA etc.

History and Versions
Python laid its foundation in the late 1980s.
The implementation of Python was started in the December 1989 by Guido Van Rossum at CWI in Netherland.
In February 1991, van Rossum published the code (labeled version 0.9.0) to alt.sources.
In 1994, Python 1.0 was released with new features like: lambda, map, filter, and reduce.
Python 2.0 added new features like: list comprehensions, garbage collection system.
On December 3, 2008, Python 3.0 (also called "Py3K") was released. It was designed to rectify fundamental flaw of the language.
ABC programming language is said to be the predecessor of Python language which was capable of Exception Handling and interfacing with Amoeba Operating System.
Python is influenced by following programming languages:
ABC language.
Modula-3

A list of python versions with its released date is given below.

Python Version	Released Date
Python 1.0	January 1994
Python 1.5	December 31, 1997
Python 1.6	September 5, 2000
Python 2.0	October 16, 2000
Python 2.1	April 17, 2001
Python 2.2	December 21, 2001
Python 2.3	July 29, 2003
Python 2.4	November 30, 2004
Python 2.5	September 19, 2006
Python 2.6	October 1, 2008
Python 2.7	July 3, 2010
Python 3.0	December 3, 2008
Python 3.1	June 27, 2009
Python 3.2	February 20, 2011
Python 3.3	September 29, 2012
Python 3.4	March 16, 2014
Python 3.5	September 13, 2015
Python 3.6	December 23, 2016
Python 3.7	June 27, 2018

we are specifing applications areas where python can be applied.

1) Web Applications
We can use Python to develop web applications. It provides libraries to handle internet protocols such as HTML and XML, JSON, Email processing, request, beautifulSoup, Feedparser etc. It also provides Frameworks such as Django, Pyramid, Flask etc to design and delelop web based applications. Some important developments are: PythonWikiEngines, Pocoo, PythonBlogSoftware etc.

2) Desktop GUI Applications
Python provides Tk GUI library to develop user interface in python based application. Some other useful toolkits wxWidgets, Kivy, pyqt that are useable on several platforms. The Kivy is popular for writing multitouch applications.

3) Software Development
Python is helpful for software development process. It works as a support language and can be used for build control and management, testing etc.

4) Scientific and Numeric
Python is popular and widely used in scientific and numeric computing. Some useful library and package are SciPy, Pandas, IPython etc. SciPy is group of packages of engineering, science and mathematics.

5) Business Applications
Python is used to build Bussiness applications like ERP and e-commerce systems. Tryton is a high level application platform.

6) Console Based Application
We can use Python to develop console based applications. For example: IPython.

7) Audio or Video based Applications
Python is awesome to perform multiple tasks and can be used to develop multimedia applications. Some of real applications are: TimPlayer, cplay etc.

8) 3D CAD Applications
To create CAD application Fandango is a real application which provides full features of CAD.

9) Enterprise Applications
Python can be used to create applications which can be used within an Enterprise or an Organization. Some real time applications are: OpenErp, Tryton, Picalo etc.

10) Applications for Images
Using Python several application can be developed for image. Applications developed are: VPython, Gogh, imgSeek etc.

There are several such applications which can be developed using Python

Installation on Windows
Visit the link https://www.python.org/downloads/ to download the latest release of Python. In this process, we will install Python 3.6.7 on our Windows operating system.

Installation on Ubuntu
To install Python3 on Ubuntu, visit the link https://www.javatpoint.com/how-to-install-python-in-ubuntu and follow the instructions given in the tutorial.

To execute Python code, we can use any approach that are given below.

1) Interactive Mode
Python provides Interactive Shell to execute code immediatly and produce output instantly. To get into this shell, write python in the command prompt and start working with Python.
2) Script Mode
Using Script Mode, we can write our Python code in a separate file of any editor in our Operating System
3) Using IDE (Integrated Development Environment)
We can execute our Python code using a Graphical User Interface (GUI).

Variables

Variable is a name which is used to refer memory location. Variable also known as identifier and used to hold value.

In Python, we don't need to specify the type of variable because Python is a type infer language and smart enough to get variable type.

Variable names can be a group of both letters and digits, but they have to begin with a letter or an underscore.

It is recomended to use lowercase letters for variable name. Rahul and rahul both are two different variables.

Identifier Naming
Variables are the example of identifiers. An Identifier is used to identify the literals used in the program. The rules to name an identifier are given below.

The first character of the variable must be an alphabet or underscore ( _ ).
All the characters except the first character may be an alphabet of lower-case(a-z), upper-case (A-Z), underscore or digit (0-9).
Identifier name must not contain any white-space, or special character (!, @, #, %, ^, &, *).
Identifier name must not be similar to any keyword defined in the language.
Identifier names are case sensitive for example my name, and MyName is not the same.
Examples of valid identifiers : a123, _n, n_9, etc.
Examples of invalid identifiers: 1a, n%4, n 9, etc.

Declaring Variable and Assigning Values

Python does not bound us to declare variable before using in the application. It allows us to create variable at required time.

We don't need to declare explicitly variable in Python. When we assign any value to the variable that variable is declared automatically.

The equal (=) operator is used to assign value to a variable.

variable<--a=10;---->values
name='venkat Reddy'
salary=30000.00

print a
print name
print salary

Multiple Assignment

Python allows us to assign a value to multiple variables in a single statement which is also known as multiple assignment.

We can apply multiple assignments in two ways either by assigning a single value to multiple variables or assigning multiple values to multiple variables.

1. Assigning single value to multiple variables

x=y=z=50  
print iple  
print y  
print z  

2.Assigning multiple values to multiple variables:

a,b,c=5,10,15  
print a  
print b  
print c 

Fundamentals:

i)Tokens and their types.

ii) Comments

a)Tokens:

Tokens can be defined as a punctuator mark, reserved words and each individual word in a statement.
Token is the smallest unit inside the given program.
There are following tokens in Python:

Keywords.
Identifiers.
Literals.
Operators.

Tuples:

Tuple is another form of collection where different type of data can be stored.
It is similar to list where data is separated by commas. Only the difference is that list uses square bracket and tuple uses parenthesis.
Tuples are enclosed in parenthesis and cannot be changed.

tuple=('rahul',100,60.4,'deepak')  
tuple1=('sanjay',10)  

>>> tuple+tuple1  
('rahul', 100, 60.4, 'deepak', 'sanjay', 10) 

Dictionary:

Dictionary is a collection which works on a key-value pair.
It works like an associated array where no two keys can be same.
Dictionaries are enclosed by curly braces ({}) and values can be retrieved by square bracket([]). 

>>> dictionary={'name':'charlie','id':100,'dept':'it'}  
>>> dictionary  
{'dept': 'it', 'name': 'charlie', 'id': 100}  
>>> dictionary.keys()  
['dept', 'name', 'id']  
>>> dictionary.values()  
['it', 'charlie', 100]  